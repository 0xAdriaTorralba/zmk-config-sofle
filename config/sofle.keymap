/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

&mt {
    flavor = "tap-unless-interrupted";
    quick-tap-ms = <100>;
    require-prior-idle-ms = <100>;
};

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    behaviors {
        c_trencada: c_trencada {
            compatible = "zmk,behavior-hold-tap";
            label = "C_TRENCADA";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            hold-trigger-key-positions = <39>;
            quick-tap-ms = <50>;
            flavor = "tap-preferred";
        };

        new_behavior2: new_behavior2 {
            compatible = "zmk,behavior-hold-tap";
            label = "NEW_BEHAVIOR2";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <12>;
            tapping-term-ms = <200>;
            quick-tap-ms = <100>;
            require-prior-idle-ms = <100>;
        };

        enya: enya {
            compatible = "zmk,behavior-hold-tap";
            label = "ENYA";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <50>;
            hold-trigger-key-positions = <44>;
            flavor = "tap-preferred";
        };

        cmd_space: cmd_space {
            compatible = "zmk,behavior-tap-dance";
            label = "CMD_SPACE";
            #binding-cells = <0>;
            bindings = <&mo 1>, <&kp LG(SPACE)>;

            tapping-term-ms = <200>;
        };

        alt_space: alt_space {
            compatible = "zmk,behavior-tap-dance";
            label = "ALT_SPACE";
            #binding-cells = <0>;
            bindings = <&mo 2>, <&kp LA(SPACE)>;

            tapping-term-ms = <200>;
        };

        service_mode: service_mode {
            compatible = "zmk,behavior-hold-tap";
            label = "SERVICE_MODE";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
            hold-trigger-key-positions = <0>;
        };

        cmd_t: cmd_t {
            compatible = "zmk,behavior-hold-tap";
            label = "CMD_T";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <17>;
        };
    };

    macros {
        previous_page: previous_page {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RG(SEMICOLON)>;
            label = "PREVIOUS_PAGE";
        };

        next_page: next_page {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RG(SINGLE_QUOTE)>;
            label = "NEXT_PAGE";
        };

        sleep: sleep {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LG(LC(EQUAL)))>;
            label = "SLEEP";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "default";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&service_mode LS(LA(SINGLE_QUOTE)) GRAVE  &kp N1       &kp N2            &kp N3                   &kp N4          &kp N5                                    &kp N6             &kp N7    &kp N8     &kp N9     &c_trencada LS(MINUS) MINUS            &c_trencada EQUAL N0
&new_behavior2 4 TAB                      &kp Q        &kp W             &kp E                    &kp R           &cmd_t LG(T) T                            &kp Y              &kp U     &kp I      &kp O      &kp P                                  &kp RIGHT_BRACKET
&kp CAPS                                  &mt LCTRL A  &mt LEFT_SHIFT S  &mt LEFT_ALT D           &mt LEFT_GUI F  &kp G                                     &kp H              &kp J     &kp K      &kp L      &c_trencada LEFT_BRACKET SINGLE_QUOTE  &kp RETURN
&kp LSHFT                                 &kp Z        &kp X             &c_trencada BACKSLASH C  &kp V           &kp B           &kp C_MUTE    &kp C_MUTE  &enya SEMICOLON N  &kp M     &kp COMMA  &kp DOT    &kp FSLH                               &kp RSHFT
                                                       &kp LCTRL         &kp LALT                 &kp LGUI        &kp BACKSPACE   &cmd_space    &alt_space  &kp SPACE          &kp RGUI  &kp RALT   &kp RCTRL
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>,
                <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;
        };

        lower_layer {
            display-name = "lower";

            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&kp ESCAPE  &kp F1     &kp F2     &kp F3    &kp F4    &kp F5                       &kp F6     &kp F7                &kp F8                 &kp F9         &kp F10           &kp F11
&kp GRAVE   &kp N1     &kp N2     &kp N3    &kp N4    &kp N5                       &kp N6     &kp LS(NUMBER_8)      &kp LS(NUMBER_9)       &kp N9         &kp N0            &kp F12
&trans      &kp EXCL   &kp AT     &kp HASH  &kp DLLR  &kp PRCNT                    &kp CARET  &kp RA(LEFT_BRACKET)  &kp RA(RIGHT_BRACKET)  &kp LPAR       &kp LEFT_BRACKET  &kp PIPE
&trans      &kp EQUAL  &kp MINUS  &kp PLUS  &kp LBRC  &kp RBRC   &trans    &trans  &kp LBKT   &kp RA(SINGLE_QUOTE)  &kp RA(BACKSLASH)      &kp LA(COMMA)  &kp LA(PERIOD)    &trans
                       &trans     &trans    &trans    &trans     &trans    &trans  &trans     &trans                &trans                 &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            display-name = "raise";

            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |       | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |       | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |       | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //                |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &trans          &trans                &trans              &trans      &trans            &kp EQUAL
&trans      &kp INS       &kp PSCRN     &kp K_CMENU   &trans        &trans                          &kp PG_UP       &trans                &kp UP              &trans      &kp N0            &trans
&trans      &kp LALT      &kp LCTRL     &kp LSHFT     &trans        &kp CLCK                        &kp LEFT_ARROW  &kp DOWN_ARROW        &kp UP_ARROW        &kp RIGHT   &kp LEFT_BRACKET  &kp BSPC
&trans      &kp K_UNDO    &kp K_CUT     &kp K_COPY    &kp K_PASTE   &trans        &trans    &trans  &previous_page  &kp C_AC_SCROLL_DOWN  &kp C_AC_SCROLL_UP  &next_page  &trans            &trans
                          &trans        &trans        &trans        &trans        &trans    &trans  &trans          &trans                &trans              &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        adjust_layer {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            display-name = "adjust";
            bindings = <
&bt BT_CLR         &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                               &none  &none           &none             &none       &none  &none
&ext_power EP_TOG  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_EFF                            &none  &none           &none             &none       &none  &none
&none              &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &none            &none            &none                                      &none  &none           &none             &none       &none  &none
&none              &none            &none            &none            &none            &none            &rgb_ug RGB_TOG    &none  &none  &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT  &none  &none
                                    &none            &none            &none            &none            &none              &none  &none  &none           &none             &none
            >;
        };

        layer_num {
            bindings = <
&trans  &trans   &trans       &trans  &trans  &trans                    &trans  &trans   &kp PERCENT  &kp SLASH              &trans  &trans
&trans  &kp TAB  &kp LS(TAB)  &trans  &trans  &trans                    &kp N7  &kp N8   &kp N9       &kp LS(RIGHT_BRACKET)  &trans  &trans
&trans  &trans   &sleep       &trans  &trans  &trans                    &kp N4  &kp N5   &kp N6       &kp SLASH              &trans  &trans
&trans  &trans   &trans       &trans  &trans  &trans  &trans    &trans  &kp N1  &kp N2   &kp N3       &kp RIGHT_BRACKET      &trans  &trans
                 &trans       &trans  &trans  &trans  &trans    &trans  &kp N0  &kp DOT  &kp ENTER    &trans
            >;

            label = "Num";
        };
    };
};
